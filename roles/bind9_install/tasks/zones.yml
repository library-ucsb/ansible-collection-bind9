---

- name: "block: bind9 zone generation"
  block:  
    - name: create dynamic bind9 zone files
      template:
        src: "{{ bind9_templates | default('') }}bind/zones/db.template.j2"
        dest: /etc/bind/zones/db.{{ item.name }}
        owner: root
        group: "{{ bind9_group }}"
        mode: 0644
      with_items: "{{ bind9_zones_dynamic }}"
      when:
        - bind9_authoritative|default()
        - item.type|default(bind9_zone_type) == 'master'
      notify:
        - zone file change
        - reload bind9
      tags:
        - role:bind9:zones
        - role:bind9:installation
        - role:bind9:zones:change    

    - name: install static bind9 zone files
      copy:
        src: bind/zones/db.{{ item.name }}
        dest: /etc/bind/zones/db.{{ item.name }}
        owner: root
        group: "{{ bind9_group }}"
        mode: 0644
        force: "{{ item.force_update|default('yes') }}"
      with_items: "{{ bind9_zones_static }}"
      when:
        - bind9_authoritative|default()
        - item.type|default(bind9_zone_type) == 'master'
      notify:
        - zone file change
        - reload bind9
      tags:
        - role:bind9:zones
        - role:bind9:installation
        - role:bind9:zones:change

    - name: check validity of zone files
      command: named-checkzone {{ item.name }} /etc/bind/zones/db.{{ item.name }}
      register: bind9_reg_named_checkzone
      become: true
      become_user: "{{ bind9_user }}"
      with_items:
        - "{{ bind9_zones_dynamic }}"
        - "{{ bind9_zones_static }}"
      when: item.type|default(bind9_zone_type) == 'master'
      changed_when: False
      vars:
        ansible_ssh_pipelining: True

      tags:
        - role:bind9:installation
        - role:bind9:zones:change
  rescue:

    - name: "bind9: stop service '{{ bind9_service_name }}'"
      ansible.builtin.service:
        name: "{{ bind9_service_name }}"
        state: stopped
      tags:
        - role:bind9:restore

    - name: "bind9: restoring {{ bind9_path_etc }}"
      ansible.builtin.unarchive:
        remote_src: yes
        src: "{{ bind9_backup_path_latest.path }}/bind9.etc.bind.gz"
        dest: "{{ bind9_path_etc }}"
        owner: root
        group: "{{ bind9_group }}"
      tags:
        - role:bind9:restore

    - name: "bind9: restoring system files"
      ansible.builtin.copy:
        remote_src: yes
        src: "{{ bind9_backup_path_latest.path }}/{{ item | basename }}"
        dest: "{{ item }}"
        owner: root
        group: "{{ bind9_group }}"
        mode: 0644
      loop:
        - "{{ bind9_path_default_bind }}"
        - "{{ bind9_path_logrotated_bind }}"
      tags:
        - role:bind9:restore

    - name: "bind9: restart bind service - {{ bind9_servie_name }}"
      ansible.builtin.service:
        name: "{{ bind9_service_name }}"
        state: restarted
      tags:
        - role:bind9:restore  