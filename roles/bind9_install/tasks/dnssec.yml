---

- name: create bind9 directory for keys
  file:
    path: /etc/bind/keys
    state: directory
    owner: "{{ bind9_user }}"
    group: "{{ bind9_group }}"
    mode: 02750
  when: bind9_authoritative|default()
  tags:
    - role:bind9:ddns
    - role:bind9:dnssec
    - role:bind9:installation

# TODO: DDNS: move keys into vault file
- name: copy over DDNS keys for zones with update_keyfile
  copy:
    src: bind/zones/{{ item.update_keyfile }}.key
    dest: /etc/bind/keys/{{ item.update_keyfile }}.key
    owner: "{{ bind9_user }}"
    group: "{{ bind9_group }}"
    mode: 0644
  with_items:
    - "{{ bind9_zones_static }} + {{ bind9_zones_dynamic }}"
  when:
    - bind9_authoritative|default()
    - item.type|default(bind9_zone_type) == 'master'
    - item.update_keyfile|default()
  tags:
    - role:bind9:installation
    - role:bind9:zones:change

- name: copy over DDNS private keys for zones with update_keyfile
  copy:
    src: bind/zones/{{ item.update_keyfile }}.private
    dest: /etc/bind/keys/{{ item.update_keyfile }}.private
    owner: "{{ bind9_user }}"
    group: "{{ bind9_group }}"
    mode: 0600
  with_items:
    - "{{ bind9_zones_static }} + {{ bind9_zones_dynamic }}"
  when:
    - bind9_authoritative|default()
    - item.type|default(bind9_zone_type) == 'master'
    - item.update_keyfile|default()
  tags:
    - role:bind9:installation
    - role:bind9:zones:change


# TODO: DNSSEC: implement key rollover
- name: determine if DNSSEC keys for zones already exist
  find:
    paths: /etc/bind/keys
    patterns: "K{{ item.name }}.+008+*"
  register: bind9_reg_dnssec_keys_tmp
  with_items:
    - "{{ bind9_zones_dynamic }} + {{ bind9_zones_static }}"
  when:
    - bind9_authoritative|default()
    - bind9_dnssec|default() or item.dnssec|default(bind9_dnssec_zones_default_enabled)
    - item.dnssec|default(bind9_dnssec_zones_default_enabled)
  tags:
    - role:bind9:dnssec
    - role:bind9:installation
    - role:bind9:zones:change
    

# Filter out all skipped results (e.g. if item.dnssec is set to False)
- set_fact:
    bind9_reg_dnssec_keys: "{{ bind9_reg_dnssec_keys_tmp.results|selectattr('skipped', 'undefined')|list }}"
    tags:
    - role:bind9:installation

- name: generate bind9 key signing keys for zones
  command: dnssec-keygen -a RSASHA256 -b 4096 -n ZONE -f KSK {{ item.item.name }}
  args:
    chdir: /etc/bind/keys
  register: bind9_reg_keygen_ksk
  become: true
  become_user: "{{ bind9_user }}"
  with_items: "{{ bind9_reg_dnssec_keys }}"
  when:
    - bind9_authoritative|default()
    - bind9_dnssec|default()
    - item.matched < 2
  notify:
    - reload bind9
  tags:
    - role:bind9:dnssec
    - role:bind9:installation
    - role:bind9:zones:change

- name: generate bind9 zone signing keys for zones
  command: dnssec-keygen -a RSASHA256 -b 2048 -n ZONE {{ item.item.name }}
  args:
    chdir: /etc/bind/keys
  register: bind9_reg_keygen_zsk
  become: true
  become_user: "{{ bind9_user }}"
  with_items: "{{ bind9_reg_dnssec_keys }}"
  when:
    - bind9_authoritative|default()
    - bind9_dnssec|default()
    - item.matched < 2
  notify:
    - reload bind9
  tags:
    - role:bind9:dnssec
    - role:bind9:installation
    - role:bind9:zones:change

- name: read in key signing keys from key files (DNSKEY)
  command: "grep 'IN DNSKEY' /etc/bind/keys/{{ item.stdout }}.key"
  register: bind9_reg_ksk
  changed_when: false
  with_items: "{{ bind9_reg_keygen_ksk.results }}"
  when:
    - bind9_authoritative|default()
    - bind9_dnssec|default()
    - item.changed|default()
  tags:
    - role:bind9:dnssec
    - role:bind9:installation
    - role:bind9:zones:change

- name: generate DS records from key signing keys
  command: "dnssec-dsfromkey -2 /etc/bind/keys/{{ item.stdout }}.key"
  register: bind9_reg_ksk_ds
  changed_when: false
  with_items: "{{ bind9_reg_keygen_ksk.results }}"
  when:
    - bind9_authoritative|default()
    - bind9_dnssec|default()
    - item.changed|default()
  tags:
    - role:bind9:dnssec
    - role:bind9:installation
    - role:bind9:zones:change
